{{- if .Values.rabbitmq.enabled -}}
{{ $fullname := printf "%s-rabbitmq" .Release.Name | trunc 63 | trimSuffix "-" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app: {{ $fullname }}
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ $fullname }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      containers:
        - name: {{ $fullname }}
          image: {{ .Values.rabbitmq.image }}
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: {{ $fullname }}-secrets
          ports:
            - name: rabbitmq
              containerPort: 5672
              protocol: TCP
            - name: management
              containerPort: 15672
              protocol: TCP
          {{- if .Values.rabbitmq.resources }}
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
          {{- end }}
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "-q", "ping"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq/data/
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ $fullname }}-volume
{{- end -}}
